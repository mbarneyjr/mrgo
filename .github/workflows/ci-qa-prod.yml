name: release-qa-prod

on:
  push:
    branches:
      - main

env:
  QA_ACCOUNT_ID: ${{ secrets.QA_ACCOUNT_ID }}
  PROD_ACCOUNT_ID: ${{ secrets.PROD_ACCOUNT_ID }}
  APPLICATION_NAME: mrgo
  ARTIFACT_BUCKET: ci-artifacts-${{ secrets.DEVOPS_ACCOUNT_ID }}-us-east-2
  ARTIFACT_PREFIX: mrgo
  CHANGE_SET_NAME: release-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}
  CHANGE_SET_DESCRIPTION: ${{ github.event.head_commit.message }}

permissions:
  id-token: write
  contents: write
  packages: read

jobs:
  test:
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          make dependencies
      - name: lint
        run: |
          make lint
      - name: Unit Tests
        run: |
          make coverage
  package:
    needs: test
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    steps:
      - uses: actions/checkout@v3
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::${{ env.QA_ACCOUNT_ID }}:role/github-action
          role-session-name: GitHubActions-${{ github.run_id }}
      - name: Install dependencies
        run: |
          make dependencies
      - name: Package Code
        run: |
          make package
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APPLICATION_NAME }}-${{ github.run_id }}
          path: artifacts/
  deploy_qa:
    needs: package
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    environment: qa
    env:
      ENVIRONMENT_NAME: qa
      HOSTED_ZONE_NAME: qa.mrgo.io
      DOMAIN_NAME: qa.mrgo.io
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APPLICATION_NAME }}-${{ github.run_id }}
          path: artifacts/
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::${{ env.QA_ACCOUNT_ID }}:role/github-action
          role-session-name: GitHubActions-${{ github.run_id }}
      - name: Install dependencies
        run: |
          make dependencies
      - id: create_change_set
        name: Create Change Set
        run: |
          make create-change-set
      - name: Execute Change Set
        if: ${{ steps.create_change_set.outputs.no_changes != 'true' }}
        run: |
          make deploy-change-set
  integration_test_qa:
    needs: deploy_qa
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    env:
      ENVIRONMENT_NAME: qa
    steps:
      - uses: actions/checkout@v3
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::${{ env.QA_ACCOUNT_ID }}:role/github-action
          role-session-name: GitHubActions-${{ github.run_id }}
      - name: Install dependencies
        run: |
          make dependencies
      - name: integration test
        run: |
          make integration-test
  deploy_prod:
    needs: integration_test_qa
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    env:
      ENVIRONMENT_NAME: prod
      HOSTED_ZONE_NAME: mrgo.io
      DOMAIN_NAME: mrgo.io
    outputs:
      no_changes: ${{ steps.create_change_set.outputs.no_changes }}
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APPLICATION_NAME }}-${{ github.run_id }}
          path: artifacts/
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::${{ env.PROD_ACCOUNT_ID }}:role/github-action
          role-session-name: GitHubActions-${{ github.run_id }}
      - name: Install dependencies
        run: |
          make dependencies
      - id: create_change_set
        name: Create Change Set
        run: |
          make create-change-set
  deploy_prod_change_set:
    needs: deploy_prod
    if: needs.deploy_prod.outputs.no_changes != 'true'
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    environment: prod
    env:
      ENVIRONMENT_NAME: prod
    steps:
      - uses: actions/checkout@v3
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::${{ env.PROD_ACCOUNT_ID }}:role/github-action
          role-session-name: GitHubActions-${{ github.run_id }}
      - name: Install dependencies
        run: |
          make dependencies
      - name: Execute Change Set
        run: |
          make deploy-change-set
