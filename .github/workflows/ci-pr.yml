name: release-pr

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - labeled
      - unlabeled
    branches:
      - main
      - feature/*

env:
  TARGET_ACCOUNT_ID: ${{ secrets.DEV_ACCOUNT_ID }}
  APPLICATION_NAME: mrgo
  ARTIFACT_BUCKET: ci-artifacts-${{ secrets.DEVOPS_ACCOUNT_ID }}-us-east-2
  ARTIFACT_PREFIX: mrgo
  CHANGE_SET_NAME: release-${{ github.run_number }}-${{ github.run_attempt }}
  CHANGE_SET_DESCRIPTION: ${{ github.event.pull_request.title }}
  HOSTED_ZONE_NAME: dev.mrgo.io

permissions:
  id-token: write
  contents: write
  packages: read

jobs:
  get_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: version
        name: get version
        run: |
          export VERSION=$(git describe --tags)
          echo "VERSION: ${VERSION}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
  get_short_ref:
    runs-on: ubuntu-latest
    outputs:
      short_ref: ${{ steps.short_ref.outputs.short_ref }}
    steps:
      - id: short_ref
        name: get short ref
        run: |
          echo "GITHUB_HEAD_REF: ${GITHUB_HEAD_REF}"
          export SHORT_REF=$(echo ${GITHUB_HEAD_REF/feature\//} | cut -c -16)
          echo "SHORT_REF: ${SHORT_REF}"
          echo "short_ref=${SHORT_REF}" >> $GITHUB_OUTPUT
  test:
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          make dependencies
      - name: lint
        run: |
          make lint
      - name: Unit Tests
        run: |
          make coverage
  package:
    needs: [get_short_ref, test]
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    steps:
      - uses: actions/checkout@v3
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::${{ env.TARGET_ACCOUNT_ID }}:role/github-actions
          role-session-name: GitHubActions-${{ github.run_id }}
      - name: Install dependencies
        run: |
          make dependencies
      - name: Package Code
        run: |
          make package
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APPLICATION_NAME }}-${{ github.run_id }}
          path: artifacts/
  deploy_pr:
    needs:
      - package
      - get_version
      - get_short_ref
    env:
      ENVIRONMENT_NAME: ${{ needs.get_short_ref.outputs.short_ref }}
      VERSION: ${{ needs.get_version.outputs.version }}
      DOMAIN_NAME: ${{ needs.get_short_ref.outputs.short_ref }}.dev.mrgo.io
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    concurrency:
      group: mrgo-${{ needs.get_short_ref.outputs.short_ref }}
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APPLICATION_NAME }}-${{ github.run_id }}
          path: artifacts/
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::${{ env.TARGET_ACCOUNT_ID }}:role/github-actions
          role-session-name: GitHubActions-${{ github.run_id }}
      - name: Install dependencies
        run: |
          make dependencies
      - id: create_change_set
        name: Create Change Set
        run: |
          make create-change-set
      - name: Execute Change Set
        if: ${{ steps.create_change_set.outputs.no_changes != 'true' }}
        run: |
          make deploy-change-set
  integration_test:
    needs:
      - deploy_pr
      - get_short_ref
    env:
      ENVIRONMENT_NAME: ${{ needs.get_short_ref.outputs.short_ref }}
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    steps:
      - uses: actions/checkout@v3
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::${{ env.TARGET_ACCOUNT_ID }}:role/github-actions
          role-session-name: GitHubActions-${{ github.run_id }}
      - name: Install dependencies
        run: |
          make dependencies
      - name: integration test
        run: |
          make integration-test
