name: release-prod

on: workflow_dispatch

env:
  TARGET_ACCOUNT_ID: ${{ secrets.PROD_ACCOUNT_ID }}
  APPLICATION_NAME: mrgo
  ENVIRONMENT_NAME: prod
  ARTIFACT_BUCKET: ci-artifacts-${{ secrets.DEVOPS_ACCOUNT_ID }}-us-east-2
  ARTIFACT_PREFIX: mrgo
  CHANGE_SET_NAME: release-${{ github.run_number }}-${{ github.run_attempt }}
  HOSTED_ZONE_NAME: mrgo.io
  DOMAIN_NAME: mrgo.io

permissions:
  id-token: write
  contents: write
  packages: read

jobs:
  get_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: version
        name: get version
        run: |
          export VERSION=$(git describe --tags)
          echo "VERSION: ${VERSION}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
  test:
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          make dependencies
      - name: lint
        run: |
          make lint
      - name: Unit Tests
        run: |
          make coverage
  package:
    needs: test
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    steps:
      - uses: actions/checkout@v3
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::${{ env.TARGET_ACCOUNT_ID }}:role/github-actions
          role-session-name: GitHubActions-${{ github.run_id }}
      - name: Install dependencies
        run: |
          make dependencies
      - name: Package Code
        run: |
          make package
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APPLICATION_NAME }}-${{ github.run_id }}
          path: artifacts/
  create_change_set:
    needs:
      - package
      - get_version
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    env:
      VERSION: ${{ needs.get_version.outputs.version }}
      CHANGE_SET_DESCRIPTION: ${{ needs.get_version.outputs.version }}
    outputs:
      no_changes: ${{ steps.create_change_set.outputs.no_changes }}
    concurrency:
      group: mrgo-prod
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APPLICATION_NAME }}-${{ github.run_id }}
          path: artifacts/
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::${{ env.TARGET_ACCOUNT_ID }}:role/github-actions
          role-session-name: GitHubActions-${{ github.run_id }}
      - name: Install dependencies
        run: |
          make dependencies
      - id: create_change_set
        name: Create Change Set
        run: |
          make create-change-set
  execute_change_set:
    needs: create_change_set
    if: needs.create_change_set.outputs.no_changes != 'true'
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    environment: prod
    env:
      ENVIRONMENT_NAME: prod
    concurrency:
      group: mrgo-prod
    steps:
      - uses: actions/checkout@v3
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::${{ env.TARGET_ACCOUNT_ID }}:role/github-actions
          role-session-name: GitHubActions-${{ github.run_id }}
      - name: Install dependencies
        run: |
          make dependencies
      - name: Execute Change Set
        run: |
          make deploy-change-set
